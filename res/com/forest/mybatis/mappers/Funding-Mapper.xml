<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Funding-Mapper">
	<sql id="search">
		<if test="searchType == 't'.toString()">
			and fun_title like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'w'.toString()">
			and member_id like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'c'.toString()">
			and fun_content like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'tc'.toString()">
			and (
			fun_title like '%'||#{keyword}||'%'
			or
			fun_content like
			'%'||#{keyword}||'%'
			)
		</if>
		<if test="searchType == 'cw'.toString()">
			and (
			member_id like '%'||#{keyword}||'%'
			or
			fun_content like
			'%'||#{keyword}||'%'
			)
		</if>
		<if test="searchType == 'tcw'.toString()">
			and (
			fun_title like '%'||#{keyword}||'%'
			or
			member_id like
			'%'||#{keyword}||'%'
			or
			fun_content like '%'||#{keyword}||'%'
			)
		</if>
	</sql>
	<sql id="orderBy">
		<if test="orderBy == ''.toString()">
			order by fun_regdate desc
		</if>
		<if test="orderBy == 'da'.toString()">
			order by fun_regdate
		</if>
		<if test="orderBy == 'dd'.toString()">
			order by fun_regdate desc
		</if>
		<if test="orderBy == 'md'.toString()">
			order by fun_money desc
		</if>
	</sql>
	<select id="selectSearchFundingList" resultType="funding">

		select *
		from(
		select rownum as rnum, SearchCrowdfundingResult.*
		from(
		select *
		from crowdfunding
		where fun_num is not null

		<include refid="search" />	
		<include refid="orderBy" />	
					<![CDATA[			
					) SearchCrowdfundingResult
				where rownum <=#{endRow}
				)
				where rnum>#{startRow}
				order by fun_regdate desc
		]]>
	</select>

	<select id="selectSearchFundingListCount" resultType="int">
		select
		count(*)
		from crowdfunding
		where fun_num is not null
		<include refid="search" />
		<include refid="orderBy" />

	</select>
	<select id="selectFundingByFun_num" parameterType="int"
		resultType="funding">
		select
		*
		from crowdfunding
		where fun_num=#{fun_num}
	</select>

	<select id="selectFundingSequenceNextValue" resultType="int">
		select
		crowdfunding_seq.nextVal
		from dual
	</select>

	<update id="increaseFun_view" parameterType="int">
		update crowdfunding
		set
		fun_view=fun_view+1
		where fun_num=#{fun_num}
	</update>

	<update id="insertFunding" parameterType="funding">
		insert into
		crowdfunding(fun_num,fun_title,fun_stitle,member_id,fun_content,fun_money,fun_img)
		values(#{fun_num},#{fun_title},#{fun_stitle},#{member_id},#{fun_content},#{fun_money},#{fun_img})
	</update>

	<update id="updateFunding" parameterType="funding">
		update crowdfunding
		set
		fun_title=#{fun_title},fun_stitle=#{fun_stitle},fun_content=#{fun_content}
		where fun_num=#{fun_num}
	</update>

	<update id="enabledFunding" parameterType="funding">
		update crowdfunding
		set
		fun_state=#{fun_state}
		where fun_num=#{fun_num}
	</update>
	<update id="deleteFunding" parameterType="int">
		delete
		from crowdfunding
		where
		fun_num=#{fun_num}
	</update>
</mapper>